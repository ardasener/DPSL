MODE=Release
NUM_THREADS=16
USE_BP=true
USE_64_BIT=false
ORDER_METHOD=degree

KERNEL_MODE=0

CXX_COMPILER=mpic++
CXX_FLAGS= -fopenmp -std=c++17 -DNUM_THREADS=$(NUM_THREADS) -DORDER_METHOD=\"$(ORDER_METHOD)\"
CXX_RELEASE_FLAGS= -O3
CXX_DEBUG_FLAGS= -O0 -g -DDEBUG
CXX_SOURCE_FILES=src/main.cpp
DPSL_FLAGS= -DUSE_GLOBAL_BP=$(USE_BP) -DUSE_LOCAL_BP=false -DN_ROOTS=16
PSL_FLAGS= -DUSE_GLOBAL_BP=false -DUSE_LOCAL_BP=$(USE_BP) -DN_ROOTS=16

CUDA_COMPILER=nvcc
CUDA_ARCH=sm_60
CUDA_FLAGS= -std=c++14 -DKERNEL_MODE=$(KERNEL_MODE) -arch=$(CUDA_ARCH) -Xcompiler -fopenmp
CUDA_RELEASE_FLAGS= -O3
CUDA_DEBUG_FLAGS= -O0 -g --generate-line-info
CUDA_SOURCE_FILES=src/gpsl.cu

ifeq ($(MODE) , Debug)
$(info Building in Debug mode...)
CXX_MODE_FLAGS = $(CXX_DEBUG_FLAGS)
CUDA_MODE_FLAGS = $(CUDA_DEBUG_FLAGS)
else
$(info Building in Release mode...)
CXX_MODE_FLAGS = $(CXX_RELEASE_FLAGS)
CUDA_MODE_FLAGS = $(CUDA_RELEASE_FLAGS)
endif

ifeq ($(USE_64_BIT) , true)
	CXX_FLAGS := $(CXX_FLAGS) -DUSE_64_BIT
endif

dpsl:
	$(CXX_COMPILER) $(CXX_SOURCE_FILES) $(CXX_FLAGS) $(CXX_MODE_FLAGS) $(DPSL_FLAGS) -o dpsl
psl:
	$(CXX_COMPILER) $(CXX_SOURCE_FILES) $(CXX_FLAGS) $(CXX_MODE_FLAGS) $(PSL_FLAGS) -o psl
gpsl:
	$(CUDA_COMPILER) $(CUDA_SOURCE_FILES) $(CUDA_FLAGS) $(CUDA_MODE_FLAGS) -o gpsl
